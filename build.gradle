import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

// Gradle script to build the LbjExamples project

plugins {
    id 'application'
}

project.ext.lwjglVersion = "3.3.1"
project.ext.lwjglNatives = "natives-macos"
OperatingSystem os = DefaultNativePlatform.currentOperatingSystem;
if(os.isWindows())
    project.ext.lwjglNatives = "natives-windows"
else if(os.isMacOsX())
    project.ext.lwjglNatives = "natives-macos"
else if(os.isLinux())
    project.ext.lwjglNatives = "natives-linux"



sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) { // Java compile-time options:
    options.compilerArgs << '-Xdiags:verbose'
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true // to provide detailed deprecation warnings
    options.encoding = 'UTF-8'
    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_1_10)) {
        options.release = 8
    }
}

// run the apps

tasks.register('AppChooser', JavaExec) {
    mainClass = 'com.github.stephengold.lbjexamples.apps.AppChooser'
}

tasks.register('HelloLibbulletjme', JavaExec) {
    mainClass = 'com.github.stephengold.lbjexamples.apps.HelloRigidBody'
}

tasks.withType(JavaExec) { // Java runtime options:
    classpath sourceSets.main.runtimeClasspath
    enableAssertions true
    jvmArgs '-XX:+UseG1GC', '-XX:MaxGCPauseMillis=10'
}

mainClassName = 'com.github.stephengold.lbjexamples.apps.HelloLibbulletjme'
if (!hasProperty('mainClass')) {
    ext.mainClass = mainClassName
}
jar.manifest.attributes('Main-Class': mainClassName)

repositories {
    //mavenLocal() // to find local SNAPSHOTs of libraries
    mavenCentral()
}

dependencies {
    implementation 'com.github.stephengold:Libbulletjme:14.3.0'

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation group: 'org.joml', name: 'joml', version: '1.10.4'
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
}


